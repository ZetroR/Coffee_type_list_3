# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sqlite3
import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QDialog, QTableWidgetItem, QMessageBox, QTableWidget


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(861, 501)
        self.tableWidget = QtWidgets.QTableWidget(Dialog)
        self.tableWidget.setGeometry(QtCore.QRect(15, 10, 831, 441))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(715, 455, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(580, 455, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "Название сорта"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "Степень обжарки"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Dialog", "Вид"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Dialog", "Описание вкуса"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("Dialog", "Цена"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("Dialog", "Объем упаковки"))
        self.pushButton.setText(_translate("Dialog", "Создать новый"))
        self.pushButton_2.setText(_translate("Dialog", "Удалить"))


class Ui_Dialog_1(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(571, 391)
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(10, 10, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(220, 60, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(10, 100, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(Dialog)
        self.label_4.setGeometry(QtCore.QRect(10, 140, 211, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(Dialog)
        self.label_5.setGeometry(QtCore.QRect(10, 60, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(Dialog)
        self.label_6.setGeometry(QtCore.QRect(220, 100, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.comboBox = QtWidgets.QComboBox(Dialog)
        self.comboBox.setGeometry(QtCore.QRect(80, 100, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.doubleSpinBox = QtWidgets.QDoubleSpinBox(Dialog)
        self.doubleSpinBox.setGeometry(QtCore.QRect(80, 60, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.doubleSpinBox.setFont(font)
        self.doubleSpinBox.setMaximum(100000.0)
        self.doubleSpinBox.setObjectName("doubleSpinBox")
        self.lineEdit = QtWidgets.QLineEdit(Dialog)
        self.lineEdit.setGeometry(QtCore.QRect(190, 10, 371, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit.setFont(font)
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(Dialog)
        self.plainTextEdit.setGeometry(QtCore.QRect(10, 180, 551, 161))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.plainTextEdit.setFont(font)
        self.plainTextEdit.setPlainText("")
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.comboBox_2 = QtWidgets.QComboBox(Dialog)
        self.comboBox_2.setGeometry(QtCore.QRect(430, 60, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.comboBox_2.setFont(font)
        self.comboBox_2.setObjectName("comboBox_2")
        self.spinBox = QtWidgets.QSpinBox(Dialog)
        self.spinBox.setGeometry(QtCore.QRect(430, 100, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.spinBox.setFont(font)
        self.spinBox.setMinimum(0)
        self.spinBox.setMaximum(1000000000)
        self.spinBox.setObjectName("spinBox")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(350, 350, 101, 31))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(460, 350, 101, 31))
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_7 = QtWidgets.QLabel(Dialog)
        self.label_7.setGeometry(QtCore.QRect(10, 360, 331, 16))
        self.label_7.setObjectName("label_7")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "Название сорта:"))
        self.label_2.setText(_translate("Dialog", "Степень обжарки:"))
        self.label_3.setText(_translate("Dialog", "Вид:"))
        self.label_4.setText(_translate("Dialog", "Описание вкуса:"))
        self.label_5.setText(_translate("Dialog", "Цена:"))
        self.label_6.setText(_translate("Dialog", "Объём упаковки:"))
        self.pushButton.setText(_translate("Dialog", "OK"))
        self.pushButton_2.setText(_translate("Dialog", "Cancel"))
        self.label_7.setText(_translate("Dialog", "||||||||||||||||||||||||||||||||||||||||||||||||||||||"))


class My_App(QDialog, Ui_Dialog):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.con = sqlite3.connect('data/coffee.sqlite')
        self.cur = self.con.cursor()

        self.cook = {}
        for i in self.cur.execute("""SELECT * FROM cooked"""):
            self.cook[i[0]] = i[1]

        self.mace = {}
        for i in self.cur.execute("""SELECT * FROM maced"""):
            self.mace[i[0]] = i[1]

        self.tableWidget.setEditTriggers(QTableWidget.NoEditTriggers)

        self.update_table()
        self.tableWidget.cellDoubleClicked.connect(self.change_coffee)
        self.pushButton.clicked.connect(self.add_coffee)
        self.pushButton_2.clicked.connect(self.delete_coffee)

    def update_table(self):
        self.tableWidget.setRowCount(0)
        info = self.cur.execute("""SELECT * FROM coffee""")
        for i1, row in enumerate(info):
            self.tableWidget.setRowCount(self.tableWidget.rowCount() + 1)
            for i2, elem in enumerate(row):
                if i2 == 2:
                    self.tableWidget.setItem(i1, i2, QTableWidgetItem(str(self.cook[elem])))
                elif i2 == 3:
                    self.tableWidget.setItem(i1, i2, QTableWidgetItem(str(self.mace[elem])))
                else:
                    self.tableWidget.setItem(i1, i2, QTableWidgetItem(str(elem)))
        self.tableWidget.resizeColumnsToContents()

    def add_coffee(self):
        dial = Change_Dialog(self)
        dial.exec()
        self.con.commit()
        self.update_table()

    def change_coffee(self, y):
        dial = Change_Dialog(self)
        dial.load_info(int(self.tableWidget.item(y, 0).text()))
        dial.exec()
        self.con.commit()
        self.update_table()

    def delete_coffee(self):
        a = list(set([i.row() for i in self.tableWidget.selectedIndexes()]))
        if a != []:
            value = QMessageBox.question(self, '', "Вы действительно хотите удалить выбранные данные?",
                                         QMessageBox.Yes, QMessageBox.No)
            if value == QMessageBox.Yes:
                for i in a:
                    self.cur.execute("DELETE FROM coffee WHERE id = ?", (int(self.tableWidget.item(i, 0).text()),))
        self.con.commit()
        self.update_table()


    def closeEvent(self, event):
        self.con.close()


class Change_Dialog(QDialog, Ui_Dialog_1):
    def __init__(self, par):
        super().__init__()
        self.setupUi(self)
        self.cur = par.cur
        self.id = None

        self.comboBox.addItems([i[1] for i in self.cur.execute("""SELECT * FROM maced""")])
        self.comboBox_2.addItems([i[1] for i in self.cur.execute("""SELECT * FROM cooked""")])

        self.pushButton.clicked.connect(self.act)
        self.pushButton_2.clicked.connect(self.close)

    def load_info(self, id):
        self.id = id
        info = next(self.cur.execute("""SELECT * FROM coffee    WHERE id == ?""", (id,)))

        self.lineEdit.setText(info[1])
        self.spinBox.setValue(info[6])
        self.doubleSpinBox.setValue(info[5])
        self.plainTextEdit.setPlainText(info[4])
        self.comboBox_2.setCurrentIndex(info[2] - 1)
        self.comboBox.setCurrentIndex(info[3] - 1)

    def act(self):
        cooked = next(self.cur.execute("""SELECT ID FROM cooked WHERE name == ?""", (self.comboBox_2.currentText(),)))[0]
        maced = next(self.cur.execute("""SELECT ID FROM maced WHERE name == ?""", (self.comboBox.currentText(),)))[0]

        if self.id is None:
            self.create_task(cooked, maced)
        else:
            self.change_task(cooked, maced)

    def change_task(self, cook, mace):
        if self.check_correct():
            self.cur.execute("""UPDATE coffee
                SET coffee_name = ?, cooked_type = ?, maced_type = ?, description = ?, price = ?, volume = ?
                WHERE ID = ?""", (self.lineEdit.text(), cook, mace, self.plainTextEdit.toPlainText(),
                                  self.doubleSpinBox.value(), self.spinBox.value(), self.id))
            self.close()

    def create_task(self, cook, mace):
        if self.check_correct():
            self.cur.execute("""INSERT INTO coffee(coffee_name, cooked_type, maced_type, description, price, volume)
            VALUES(?, ?, ?, ?, ?, ?)""", (self.lineEdit.text(), cook, mace, self.plainTextEdit.toPlainText(),
                                          self.doubleSpinBox.value(), self.spinBox.value()))
            self.close()

    def check_correct(self):
        if self.lineEdit.text() == '':
            self.label_7.setText("Название не может быть пустым")
        elif self.doubleSpinBox.value() == 0:
            self.label_7.setText("Цена должна быть больше 0")
        elif self.spinBox.value() == 0:
            self.label_7.setText("Объем не может быть нулевым")
        else:
            return True
        return False


if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = My_App()
    ex.show()
    sys.exit(app.exec_())
